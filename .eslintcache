[{"/Users/jessicadever/workspace/kennels/src/index.js":"1","/Users/jessicadever/workspace/kennels/src/components/Kennel.js":"2","/Users/jessicadever/workspace/kennels/src/components/ApplicationViews.js":"3","/Users/jessicadever/workspace/kennels/src/components/nav/NavBar.js":"4","/Users/jessicadever/workspace/kennels/src/components/Home.js":"5","/Users/jessicadever/workspace/kennels/src/components/animal/AnimalCard.js":"6","/Users/jessicadever/workspace/kennels/src/components/location/LocationCard.js":"7","/Users/jessicadever/workspace/kennels/src/components/animal/AnimalList.js":"8","/Users/jessicadever/workspace/kennels/src/components/location/LocationList.js":"9","/Users/jessicadever/workspace/kennels/src/components/location/LocationProvider.js":"10","/Users/jessicadever/workspace/kennels/src/components/customer/CustomerList.js":"11","/Users/jessicadever/workspace/kennels/src/components/animal/AnimalProvider.js":"12","/Users/jessicadever/workspace/kennels/src/components/employee/EmployeeList.js":"13","/Users/jessicadever/workspace/kennels/src/components/employee/EmployeeProvider.js":"14","/Users/jessicadever/workspace/kennels/src/components/customer/CustomerCard.js":"15","/Users/jessicadever/workspace/kennels/src/components/employee/EmployeeCard.js":"16","/Users/jessicadever/workspace/kennels/src/components/customer/CustomerProvider.js":"17","/Users/jessicadever/workspace/kennels/src/components/animal/AnimalForm.js":"18","/Users/jessicadever/workspace/kennels/src/components/employee/EmployeeForm.js":"19","/Users/jessicadever/workspace/kennels/src/components/location/LocationForm.js":"20","/Users/jessicadever/workspace/kennels/src/components/animal/AnimalDetail.js":"21","/Users/jessicadever/workspace/kennels/src/components/employee/EmployeeDetail.js":"22","/Users/jessicadever/workspace/kennels/src/components/location/LocationDetail.js":"23"},{"size":348,"mtime":1611246159443,"results":"24","hashOfConfig":"25"},{"size":235,"mtime":1611246520346,"results":"26","hashOfConfig":"25"},{"size":3209,"mtime":1611774501142,"results":"27","hashOfConfig":"25"},{"size":886,"mtime":1611245819256,"results":"28","hashOfConfig":"25"},{"size":359,"mtime":1611246011609,"results":"29","hashOfConfig":"25"},{"size":450,"mtime":1611679467111,"results":"30","hashOfConfig":"25"},{"size":621,"mtime":1611776498199,"results":"31","hashOfConfig":"25"},{"size":1420,"mtime":1611775912934,"results":"32","hashOfConfig":"25"},{"size":1554,"mtime":1611776172691,"results":"33","hashOfConfig":"25"},{"size":1092,"mtime":1611778772299,"results":"34","hashOfConfig":"25"},{"size":796,"mtime":1611678131894,"results":"35","hashOfConfig":"25"},{"size":1041,"mtime":1611774964074,"results":"36","hashOfConfig":"25"},{"size":956,"mtime":1611682994481,"results":"37","hashOfConfig":"25"},{"size":1061,"mtime":1611691171433,"results":"38","hashOfConfig":"25"},{"size":279,"mtime":1611345038552,"results":"39","hashOfConfig":"25"},{"size":393,"mtime":1611682696720,"results":"40","hashOfConfig":"25"},{"size":855,"mtime":1611678131895,"results":"41","hashOfConfig":"25"},{"size":3873,"mtime":1611678131894,"results":"42","hashOfConfig":"25"},{"size":2671,"mtime":1611678131895,"results":"43","hashOfConfig":"25"},{"size":2199,"mtime":1611678131896,"results":"44","hashOfConfig":"25"},{"size":1030,"mtime":1611680108572,"results":"45","hashOfConfig":"25"},{"size":846,"mtime":1611689017786,"results":"46","hashOfConfig":"25"},{"size":1196,"mtime":1611779228219,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ewxsy7",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jessicadever/workspace/kennels/src/index.js",[],"/Users/jessicadever/workspace/kennels/src/components/Kennel.js",[],"/Users/jessicadever/workspace/kennels/src/components/ApplicationViews.js",["102","103","104","105"],"/Users/jessicadever/workspace/kennels/src/components/nav/NavBar.js",[],"/Users/jessicadever/workspace/kennels/src/components/Home.js",[],"/Users/jessicadever/workspace/kennels/src/components/animal/AnimalCard.js",[],["106","107"],"/Users/jessicadever/workspace/kennels/src/components/location/LocationCard.js",[],"/Users/jessicadever/workspace/kennels/src/components/animal/AnimalList.js",["108","109"],"/Users/jessicadever/workspace/kennels/src/components/location/LocationList.js",["110","111","112"],"/Users/jessicadever/workspace/kennels/src/components/location/LocationProvider.js",[],"/Users/jessicadever/workspace/kennels/src/components/customer/CustomerList.js",["113"],"import React, { useContext, useEffect } from \"react\"\nimport { CustomerContext } from \"./CustomerProvider\"\nimport { CustomerCard } from \"./CustomerCard\"\nimport \"./Customer.css\"\n\nexport const CustomerList = () => {\n  // This state changes when `getCustomer()` is invoked below\n    const { customers, getCustomers } = useContext(CustomerContext)\n\n    //useEffect - reach out to the world for something\n    useEffect(() => {\n        console.log(\"CustomerList: useEffect - getCustomer\")\n        getCustomers()\n\n    }, [])\n\n\n    return (\n        <div className=\"customers\">\n        {console.log(\"CustomerList: Render\", customers)}\n        {\n            customers.map(customer => {\n            return <CustomerCard key={customer.id} customer={customer} />\n            })\n        }\n        </div>\n    )\n}","/Users/jessicadever/workspace/kennels/src/components/animal/AnimalProvider.js",[],"/Users/jessicadever/workspace/kennels/src/components/employee/EmployeeList.js",["114"],"import React, { useContext, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { EmployeeContext } from \"./EmployeeProvider\"\nimport { EmployeeCard } from \"./EmployeeCard\"\nimport \"./Employee.css\"\n\nexport const EmployeeList = () => {\n  // This state changes when `getEmployees()` is invoked below\nconst { employees, getEmployees } = useContext(EmployeeContext)\nconst history = useHistory()\n//useEffect - reach out to the world for something\nuseEffect(() => {\n    console.log(\"EmployeeList: useEffect - getEmployees\")\n    getEmployees()\n\n}, [])\n\n\nreturn (\n\n    <div className=\"employees\">\n    <h2>Employees</h2>\n            <button onClick={() => {history.push(\"/employees/create\")}}>\n                New Employee\n            </button>\n    {console.log(\"EmployeeList: Render\", employees)}\n    {\n        employees.map(employee => {\n        return <EmployeeCard key={employee.id} employee={employee} />\n        })\n    }\n    </div>\n)\n}","/Users/jessicadever/workspace/kennels/src/components/employee/EmployeeProvider.js",[],"/Users/jessicadever/workspace/kennels/src/components/customer/CustomerCard.js",[],"/Users/jessicadever/workspace/kennels/src/components/employee/EmployeeCard.js",[],"/Users/jessicadever/workspace/kennels/src/components/customer/CustomerProvider.js",[],"/Users/jessicadever/workspace/kennels/src/components/animal/AnimalForm.js",["115"],"import React, { useContext, useEffect, useState } from 'react'\nimport { LocationContext } from '../location/LocationProvider'\nimport { AnimalContext } from '../animal/AnimalProvider'\nimport { CustomerContext } from '../customer/CustomerProvider'\nimport \"./Animal.css\"\nimport { useHistory } from 'react-router-dom'\n\nexport const AnimalForm = () => {\n    const { addAnimal } = useContext(AnimalContext)\n    const { locations, getLocations } = useContext(LocationContext)\n    const { customers, getCustomers } = useContext(CustomerContext)\n\n    const [animal, setAnimal] = useState(\n        {\n            name: \"\",\n            breed: \"\",\n            locationId: 0,\n            customerId: 0\n        }\n    )\n\n    const history = useHistory()\n\n    useEffect( () => {\n        getCustomers().then(getLocations)\n    }, [])\n\n    const handleControlledInputChange = (event) => {\n        const newAnimal = { ...animal }\n        let selectedVal = event.target.value\n        if (event.target.id.includes(\"Id\")) {\n            selectedVal = parseInt(selectedVal)\n        }\n        newAnimal[event.target.id] = selectedVal\n        setAnimal(newAnimal)\n    }\n\n    const handleClickSaveAnimal = (event) => {\n        event.preventDefault()\n\n        const locationId = animal.locationId\n        const customerId = animal.customerId\n\n        if (locationId === 0 || customerId === 0) {\n            window.alert(\"Please select a location and a customer\")\n        } else {\n            addAnimal(animal)\n                .then(()=> history.push(\"/animals\"))\n        }\n    }\n\n    return (\n        <form className=\"animalForm\">\n            <h2 className=\"animalForm__title\">New Animal</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Animal name:</label>\n                    <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Animal name\" value={animal.name}/>\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"breed\">Animal breed:</label>\n                    <input type=\"text\" id=\"breed\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Animal breed\" value={animal.breed}/>\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"location\">Assign to location: </label>\n                    <select defaultValue={animal.locationId} name=\"locationId\" id=\"locationId\" onChange={handleControlledInputChange} className=\"form-control\" >\n                        <option value=\"0\">Select a location</option>\n                        {locations.map(l => (\n                            <option key={l.id} value={l.id}>\n                                {l.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"customerId\">Customer: </label>\n                    <select defaultValue={animal.customerId} name=\"customer\" id=\"customerId\" onChange={handleControlledInputChange} className=\"form-control\" >\n                        <option value=\"0\">Select a customer</option>\n                        {customers.map(c => (\n                            <option key={c.id} value={c.id}>\n                                {c.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </fieldset>\n            <button className=\"btn btn-primary\"\n                onClick={handleClickSaveAnimal}>\n                Save Animal\n            </button>\n        </form>\n    )\n\n}","/Users/jessicadever/workspace/kennels/src/components/employee/EmployeeForm.js",["116"],"import React, { useContext, useEffect, useState } from 'react'\nimport { EmployeeContext } from '../employee/EmployeeProvider'\nimport { LocationContext } from '../location/LocationProvider'\nimport \"./Employee.css\"\nimport { useHistory } from 'react-router-dom'\n\nexport const EmployeeForm = () => {\n    const { addEmployee } = useContext(EmployeeContext)\n    const { locations, getLocations } = useContext(LocationContext)\n    \n    const [employee, setEmployee] = useState(\n        {\n            name: \"\",\n            locationId: 0,\n        }\n    )\n\n    const history = useHistory()\n\n    useEffect( () => {\n        getLocations()\n    }, [])\n\n    const handleControlledInputChange = (event) => {\n        const newEmployee = { ...employee }\n        let selectedVal = event.target.value\n        if (event.target.id.includes(\"Id\")) {\n            selectedVal = parseInt(selectedVal)\n        }\n        newEmployee[event.target.id] = selectedVal\n        setEmployee(newEmployee)\n    }\n\n    const handleClickSaveEmployee = (event) => {\n        event.preventDefault()\n\n        const locationId = employee.locationId\n        \n        if (locationId === 0) {\n            window.alert(\"Please select a location\")\n        } else {\n            addEmployee(employee)\n                .then(()=> history.push(\"/employees\"))\n        }\n    }\n\n    return (\n        <form className=\"employeeForm\">\n            <h2 className=\"employeeForm__title\">New Employee</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Employee name:</label>\n                    <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Employee name\" value={employee.name}/>\n                </div>\n            </fieldset>\n            \n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"location\">Assign to location: </label>\n                    <select defaultValue={employee.locationId} name=\"locationId\" id=\"locationId\" onChange={handleControlledInputChange} className=\"form-control\" >\n                        <option value=\"0\">Select a location</option>\n                        {locations.map(l => (\n                            <option key={l.id} value={l.id}>\n                                {l.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n            </fieldset>\n            \n            <button className=\"btn btn-primary\"\n                onClick={handleClickSaveEmployee}>\n                Save Employee\n            </button>\n        </form>\n    )\n\n}","/Users/jessicadever/workspace/kennels/src/components/location/LocationForm.js",["117"],"import React, { useContext, useEffect, useState } from 'react'\nimport { LocationContext } from '../location/LocationProvider'\nimport \"./Location.css\"\nimport { useHistory } from 'react-router-dom'\n\nexport const LocationForm = () => {\n    const { addLocation, getLocations } = useContext(LocationContext)\n\n    const [location, setLocation] = useState(\n        {\n            name: \"\",\n            address: \"\"\n        }\n    )\n\n    const history = useHistory()\n\n    useEffect(() => {\n        getLocations()\n    }, [])\n\n\n    const handleControlledInputChange = (event) => {\n        const newLocation = { ...location }\n        let selectedVal = event.target.value\n        if (event.target.id.includes(\"Id\")) {\n            selectedVal = parseInt(selectedVal)\n        }\n        newLocation[event.target.id] = selectedVal\n        setLocation(newLocation)\n    }\n\n    const handleClickSaveLocation = (event) => {\n        event.preventDefault()\n        const locationId = location.id\n        if (locationId === 0) {\n            window.alert(\"Please enter a location\")\n        } else {\n            addLocation(location)\n                .then(()=> history.push(\"/locations\"))\n        }\n    }\n\n    return (\n        <form className=\"locationForm\">\n            <h2 className=\"locationForm__title\">New Location</h2>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Location name:</label>\n                    <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Location name\" value={location.name}/>\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"address\">Address:</label>\n                    <input type=\"text\" id=\"address\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Address\" value={location.address}/>\n                </div>\n            </fieldset>\n            <button className=\"btn btn-primary\"\n                onClick={handleClickSaveLocation}>\n                Save Location\n            </button>\n        </form>   \n    )\n}","/Users/jessicadever/workspace/kennels/src/components/animal/AnimalDetail.js",["118","119"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { AnimalContext } from \"./AnimalProvider\"\nimport \"./Animal.css\"\nimport { useParams, useHistory } from \"react-router-dom\"\n\nexport const AnimalDetail = () => {\n\n    const { getAnimalById } = useContext(AnimalContext)\n\n        const [animal, setAnimal ] = useState({})\n\n        const {animalId} = useParams();\n        const history = useHistory()\n    \n        useEffect(() => {\n            console.log(\"useEffect\", animalId)\n            getAnimalById(animalId)\n            .then((response) => {\n                setAnimal(response)\n            })\n        }, [])\n\n        return (\n            <section className=\"animal\">\n                <h3 className=\"animal__name\">{animal.name}</h3>\n                <div className=\"animal__breed\">{animal.breed}</div>\n                <div className=\"animal__location\">Location: {animal.location?.name}</div>\n                <div className=\"animal__owner\">Customer: {animal.customer?.name}</div>\n            </section>\n        )\n}","/Users/jessicadever/workspace/kennels/src/components/employee/EmployeeDetail.js",["120","121"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { EmployeeContext } from \"./EmployeeProvider\"\nimport \"./Employee.css\"\nimport { useParams, useHistory } from \"react-router-dom\"\n\nexport const EmployeeDetail = () => {\n    const { getEmployeeById } = useContext(EmployeeContext)\n\n        const [employee, setEmployee] = useState({})\n\n        const {employeeId} = useParams()\n        const history = useHistory()\n    \n    useEffect(() => {\n        console.log(\"useEffect\", employeeId)\n        getEmployeeById(employeeId)\n\n        .then((response) => {\n            setEmployee(response)\n        })\n    }, [])\n\n    return (\n        <section className=\"employee\">\n            <h3 className=\"employee__name\">{employee.name}</h3>\n            <div className=\"location__address\">{employee.location?.name}</div>\n        </section>\n    )\n}","/Users/jessicadever/workspace/kennels/src/components/location/LocationDetail.js",["122","123"],{"ruleId":"124","severity":1,"message":"125","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":20},{"ruleId":"124","severity":1,"message":"128","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":22},{"ruleId":"124","severity":1,"message":"129","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":22},{"ruleId":"124","severity":1,"message":"130","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":22},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"124","severity":1,"message":"135","line":12,"column":13,"nodeType":"126","messageId":"127","endLine":12,"endColumn":22},{"ruleId":"136","severity":1,"message":"137","line":23,"column":8,"nodeType":"138","endLine":23,"endColumn":10,"suggestions":"139"},{"ruleId":"124","severity":1,"message":"140","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":25},{"ruleId":"124","severity":1,"message":"141","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":23},{"ruleId":"136","severity":1,"message":"142","line":22,"column":8,"nodeType":"138","endLine":22,"endColumn":10,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"144","line":15,"column":8,"nodeType":"138","endLine":15,"endColumn":10,"suggestions":"145"},{"ruleId":"136","severity":1,"message":"146","line":16,"column":4,"nodeType":"138","endLine":16,"endColumn":6,"suggestions":"147"},{"ruleId":"136","severity":1,"message":"148","line":26,"column":8,"nodeType":"138","endLine":26,"endColumn":10,"suggestions":"149"},{"ruleId":"136","severity":1,"message":"142","line":22,"column":8,"nodeType":"138","endLine":22,"endColumn":10,"suggestions":"150"},{"ruleId":"136","severity":1,"message":"142","line":20,"column":8,"nodeType":"138","endLine":20,"endColumn":10,"suggestions":"151"},{"ruleId":"124","severity":1,"message":"152","line":13,"column":15,"nodeType":"126","messageId":"127","endLine":13,"endColumn":22},{"ruleId":"136","severity":1,"message":"153","line":21,"column":12,"nodeType":"138","endLine":21,"endColumn":14,"suggestions":"154"},{"ruleId":"124","severity":1,"message":"152","line":12,"column":15,"nodeType":"126","messageId":"127","endLine":12,"endColumn":22},{"ruleId":"136","severity":1,"message":"155","line":21,"column":8,"nodeType":"138","endLine":21,"endColumn":10,"suggestions":"156"},{"ruleId":"124","severity":1,"message":"152","line":14,"column":11,"nodeType":"126","messageId":"127","endLine":14,"endColumn":18},{"ruleId":"136","severity":1,"message":"157","line":22,"column":8,"nodeType":"138","endLine":22,"endColumn":10,"suggestions":"158"},"no-unused-vars","'AnimalCard' is defined but never used.","Identifier","unusedVar","'LocationCard' is defined but never used.","'CustomerCard' is defined but never used.","'EmployeeCard' is defined but never used.","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"'locations' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAnimals', 'getCustomers', and 'getLocations'. Either include them or remove the dependency array.","ArrayExpression",["161"],"'EmployeeContext' is defined but never used.","'AnimalContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["162"],"React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["163"],"React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["164"],"React Hook useEffect has missing dependencies: 'getCustomers' and 'getLocations'. Either include them or remove the dependency array.",["165"],["166"],["167"],"'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'animalId' and 'getAnimalById'. Either include them or remove the dependency array.",["168"],"React Hook useEffect has missing dependencies: 'employeeId' and 'getEmployeeById'. Either include them or remove the dependency array.",["169"],"React Hook useEffect has missing dependencies: 'getLocationById' and 'locationId'. Either include them or remove the dependency array.",["170"],"no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"173","fix":"181"},{"desc":"173","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [getAnimals, getCustomers, getLocations]",{"range":"189","text":"190"},"Update the dependencies array to be: [getLocations]",{"range":"191","text":"192"},"Update the dependencies array to be: [getCustomers]",{"range":"193","text":"194"},"Update the dependencies array to be: [getEmployees]",{"range":"195","text":"196"},"Update the dependencies array to be: [getCustomers, getLocations]",{"range":"197","text":"198"},{"range":"199","text":"192"},{"range":"200","text":"192"},"Update the dependencies array to be: [animalId, getAnimalById]",{"range":"201","text":"202"},"Update the dependencies array to be: [employeeId, getEmployeeById]",{"range":"203","text":"204"},"Update the dependencies array to be: [getLocationById, locationId]",{"range":"205","text":"206"},[890,892],"[getAnimals, getCustomers, getLocations]",[909,911],"[getLocations]",[517,519],"[getCustomers]",[565,567],"[getEmployees]",[811,813],"[getCustomers, getLocations]",[634,636],[509,511],[624,626],"[animalId, getAnimalById]",[620,622],"[employeeId, getEmployeeById]",[652,654],"[getLocationById, locationId]"]